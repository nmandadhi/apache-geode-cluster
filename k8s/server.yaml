apiVersion: v1
kind: Service
metadata:
  name: server
  namespace: geode
spec:
  ports:
    - port: 40404
      name: server
  clusterIP: None
  selector:
    app: server
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: server
  namespace: geode
spec:
  selector:
    matchLabels:
      app: server
  serviceName: "server"
  replicas: 3
  template:
    metadata:
      labels:
        app: server
    spec:
      volumes:
        - name: varlog
          emptyDir: {}
      containers:
        - name: server
          image: gcr.io/solstice-api-junkyard/geode
          imagePullPolicy: IfNotPresent
          command:
            - sh
            - -c
            - |
              gfsh start server --name=${HOSTNAME} --dir=/data --J=-Dgemfire.locator-wait-time=100 \
              --locators=locator-internal[10334] \
              --max-heap=256m --hostname-for-clients=$(hostname -i) \
              --bind-address=$(hostname -i) --jmx-manager-hostname-for-clients=$(hostname -i) \
              --J=-Dgemfire.log-file=/var/log/server.log && \
              tail -f /var/log/server.log
          ports:
            - containerPort: 40404
              name: server
            - containerPort: 1099
              name: jmx
          livenessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  cat /data/vf.gf.server.pid | xargs ps
            initialDelaySeconds: 20
            periodSeconds: 1
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - |
                  cat /data/vf.gf.server.pid | xargs ps
            initialDelaySeconds: 60
            periodSeconds: 5
      initContainers:
        - name: wait-for-locator
          image: busybox
          command:
            - sh
            - -c
            - |
              until nslookup locator-internal; do
                echo "Waiting for locator"
                sleep 2
              done